{"version":3,"file":"valuemaps_manager.min.js","sources":["../src/valuemaps_manager.js"],"sourcesContent":["/**\n * ValueMaps Manager for AI Tools Subplugin - Fixed Version\n * \n * @module aitoolsub_valuemapdoc/valuemaps_manager\n * @copyright 2024 Your Organization\n */\n\ndefine(['jquery', 'core/ajax', 'core/notification'], function($, Ajax, Notification) {\n    \n    var table = null;\n    var config = window.valuemapsConfig || {};\n    var allData = [];\n    var processedData = [];\n    var selectedRows = [];\n\n    return {\n        /**\n         * Initialize the valuemaps manager\n         */\n        init: function() {\n            console.log('[valuemaps_manager] Module loaded');\n            \n            // Get columns from element (same pattern as module)\n            var columnsElement = document.querySelector('#valuemap-columns');\n            if (!columnsElement || !columnsElement.textContent) {\n                console.warn('[valuemaps_manager] Columns not found');\n                return;\n            }\n\n            var columns;\n            try {\n                columns = JSON.parse(columnsElement.textContent);\n                console.log('[valuemaps_manager] Parsed columns:', columns);\n            } catch (e) {\n                console.error('[valuemaps_manager] Error parsing columns:', e);\n                return;\n            }\n\n            if (!Array.isArray(columns)) {\n                console.error('[valuemaps_manager] Columns is not an array');\n                return;\n            }\n\n            // Wait for Tabulator to be available\n            this.waitForTabulator(columns);\n        },\n\n        /**\n         * Wait for Tabulator library to be loaded\n         */\n        waitForTabulator: function(columns) {\n            var self = this;\n            \n            if (typeof window.Tabulator !== 'undefined') {\n                console.log('[valuemaps_manager] Tabulator available, initializing...');\n                this.bindEvents();\n                this.loadData(columns);\n            } else {\n                console.log('[valuemaps_manager] Waiting for Tabulator...');\n                setTimeout(function() {\n                    self.waitForTabulator(columns);\n                }, 100);\n            }\n        },\n\n        /**\n         * Bind event handlers\n         */\n        bindEvents: function() {\n            var self = this;\n            \n            // Refresh data\n            $('#refresh-data').on('click', function() {\n                self.init();\n            });\n            \n            // Export data\n            $('#export-data').on('click', function() {\n                self.showExportOptions();\n            });\n            \n            // Clear filters\n            $('#clear-filters').on('click', function() {\n                self.clearFilters();\n            });\n            \n            // Filter controls\n            $('#filter-course, #filter-activity').on('change', function() {\n                self.applyFilters();\n            });\n            \n            $('#search-entries').on('input', function() {\n                self.applyFilters();\n            });\n            \n            // Retry loading\n            $('#retry-loading').on('click', function() {\n                self.init();\n            });\n            \n            // Fullscreen toggle\n            $('#toggle-fullscreen').on('click', function() {\n                self.toggleFullscreen();\n            });\n        },\n\n        /**\n         * Load data from server\n         */\n        loadData: function(columns) {\n            var self = this;\n            this.showLoadingState();\n            \n            Ajax.call([{\n                methodname: 'aitoolsub_valuemapdoc_get_all_entries_global',\n                args: {\n                    userid: config.userid || 0\n                }\n            }])[0].done(function(data) {\n                allData = data.entries || [];\n                \n                console.log('[valuemaps_manager] Entries loaded:', allData, 'records');\n                \n                // Debug: Check first entry structure\n                if (allData.length > 0) {\n                    console.log('[valuemaps_manager] First entry data:', allData[0]);\n                    console.log('[valuemaps_manager] Available fields:', Object.keys(allData[0]));\n                    \n                    // Debug specific fields\n                    console.log('[valuemaps_manager] Entry market field:', allData[0].market);\n                    console.log('[valuemaps_manager] Entry role field:', allData[0].role);\n                    console.log('[valuemaps_manager] Entry entry_data field:', allData[0].entry_data);\n                }\n                \n                // Update statistics\n                self.updateStatistics(data.statistics);\n                \n                // Populate filter options\n                self.populateFilterOptions(data);\n                \n                // Process data with group separators\n                processedData = self.processDataWithSeparators(allData);\n                \n                // Initialize or update table\n                if (processedData.length > 0) {\n                    self.initializeTable(columns, processedData);\n                    self.showTableState();\n                } else {\n                    self.showEmptyState();\n                }\n                \n            }).fail(function(error) {\n                console.error('[valuemaps_manager] Failed to load entries:', error);\n                self.showErrorState(error.message || 'Unknown error occurred');\n                Notification.exception(error);\n            });\n        },\n\n        /**\n         * Process data and add group separators with edit buttons\n         */\n        processDataWithSeparators: function(entries) {\n            if (entries.length === 0) {\n                return [];\n            }\n\n            var processedData = [];\n            var currentGroup = null;\n\n            // Data is already sorted by course_name, activity_name, timemodified\n            entries.forEach(function(entry) {\n                var groupKey = entry.course_name + ' â†’ ' + entry.activity_name;\n                \n                // Add separator row when group changes\n                if (currentGroup !== groupKey) {\n                    processedData.push({\n                        id: 'separator_' + processedData.length,\n                        isSeparator: true,\n                        groupTitle: groupKey,\n                        course_name: entry.course_name,\n                        activity_name: entry.activity_name,\n                        cmid: entry.cmid,\n                        // Fix: Create proper view URL for the module\n                        edit_url: M.cfg.wwwroot + '/mod/valuemapdoc/view.php?id=' + entry.cmid\n                    });\n                    currentGroup = groupKey;\n                }\n                \n                // Add actual entry\n                processedData.push(entry);\n            });\n\n            return processedData;\n        },\n\n        /**\n         * Update statistics display\n         */\n        updateStatistics: function(stats) {\n            $('#stat-total-entries').text(stats.total_entries || 0);\n            $('#stat-unique-courses').text(stats.unique_courses || 0);\n            $('#stat-unique-activities').text(stats.unique_activities || 0);\n        },\n\n        /**\n         * Populate filter dropdowns\n         */\n        populateFilterOptions: function(data) {\n            var stats = data.statistics || {};\n            \n            // Courses\n            var courseSelect = $('#filter-course');\n            courseSelect.find('option:not(:first)').remove();\n            if (stats.courses_list) {\n                stats.courses_list.forEach(function(course) {\n                    courseSelect.append('<option value=\"' + course + '\">' + course + '</option>');\n                });\n            }\n            \n            // Activities\n            var activitySelect = $('#filter-activity');\n            activitySelect.find('option:not(:first)').remove();\n            if (stats.activities_list) {\n                stats.activities_list.forEach(function(activity) {\n                    activitySelect.append('<option value=\"' + activity + '\">' + activity + '</option>');\n                });\n            }\n        },\n\n        /**\n         * Prepare columns with checkbox selection and simplified data\n         */\n        prepareColumns: function(columns) {\n            var self = this;\n            var enhancedColumns = [];\n            \n            // Add checkbox column first (like in module)\n            enhancedColumns.push({\n                formatter: function(cell, formatterParams) {\n                    var data = cell.getRow().getData();\n                    if (data.isSeparator) {\n                        // Show edit button in separator row\n                        return '<a href=\"' + data.edit_url + '\" class=\"btn btn-sm btn-primary\" target=\"_blank\">' +\n                               '<i class=\"fa fa-edit\"></i> Edit</a>';\n                    } else {\n                        // Show checkbox for data rows\n                        return '<input type=\"checkbox\" class=\"entry-checkbox\" data-entry-id=\"' + data.id + '\">';\n                    }\n                },\n                width: 80,\n                hozAlign: \"center\",\n                headerSort: false,\n                cellClick: function(e, cell) {\n                    var data = cell.getRow().getData();\n                    if (!data.isSeparator) {\n                        e.stopPropagation();\n                        self.toggleRowSelection(data.id);\n                    }\n                }\n            });\n            \n            // Add mapped columns from user's field level\n            columns.forEach(function(col) {\n                enhancedColumns.push({\n                    title: col.title,\n                    field: col.field,\n                    hozAlign: col.hozAlign || 'left',\n                    headerSort: col.headerSort !== false,\n                    width: col.width || 150,\n                    headerFilter: \"input\",\n                    editable: false,\n                    formatter: function(cell) {\n                        var row = cell.getRow();\n                        var data = row.getData();\n                        \n                        if (data.isSeparator) {\n                            return '';\n                        }\n                        \n                        // Get value from the actual field\n                        var value = data[col.field];\n                        \n                        // Debug first few entries\n                        if (data.id <= 8) {\n                            console.log('Entry', data.id, 'field', col.field, 'value:', value);\n                        }\n                        \n                        if (value && value.length > 50) {\n                            return '<div class=\"text-truncate\" style=\"max-width: ' + (col.width - 20) + 'px;\" title=\"' + \n                                   value + '\">' + value + '</div>';\n                        }\n                        return value || '';\n                    }\n                });\n            });\n            \n            // Add username column (simplified)\n            enhancedColumns.push({\n                title: \"Author\",\n                field: \"username\", \n                hozAlign: \"left\",\n                headerSort: true,\n                width: 120,\n                headerFilter: \"input\",\n                editable: false,\n                formatter: function(cell) {\n                    var row = cell.getRow();\n                    var data = row.getData();\n                    \n                    if (data.isSeparator) {\n                        return '';\n                    }\n                    \n                    var value = cell.getValue();\n                    if (data.ismaster === 1) {\n                        return '<i class=\"fa fa-star text-warning\" title=\"Master entry\"></i> ' + value;\n                    }\n                    return value;\n                }\n            });\n\n            return enhancedColumns;\n        },\n\n        /**\n         * Toggle row selection\n         */\n        toggleRowSelection: function(entryId) {\n            var checkbox = $('input[data-entry-id=\"' + entryId + '\"]');\n            var isSelected = checkbox.prop('checked');\n            \n            if (isSelected) {\n                selectedRows = selectedRows.filter(function(id) {\n                    return id !== entryId;\n                });\n            } else {\n                selectedRows.push(entryId);\n            }\n            \n            checkbox.prop('checked', !isSelected);\n            this.updateSelectionUI();\n        },\n\n        /**\n         * Update selection UI\n         */\n        updateSelectionUI: function() {\n            var count = selectedRows.length;\n            var selectionInfo = $('.selection-info');\n            \n            if (count > 0) {\n                if (selectionInfo.length === 0) {\n                    $('.table-controls').prepend(\n                        '<div class=\"selection-info alert alert-info py-2 px-3 me-2\">' +\n                        '<span class=\"selection-count\">' + count + '</span> entries selected ' +\n                        '<button class=\"btn btn-sm btn-primary ms-2\" id=\"generate-docs\">Generate Documents</button>' +\n                        '<button class=\"btn btn-sm btn-secondary ms-1\" id=\"clear-selection\">Clear</button>' +\n                        '</div>'\n                    );\n                    \n                    // Bind events\n                    $('#generate-docs').on('click', this.generateDocuments.bind(this));\n                    $('#clear-selection').on('click', this.clearSelection.bind(this));\n                } else {\n                    selectionInfo.find('.selection-count').text(count);\n                }\n            } else {\n                selectionInfo.remove();\n            }\n        },\n\n        /**\n         * Clear selection\n         */\n        clearSelection: function() {\n            selectedRows = [];\n            $('.entry-checkbox').prop('checked', false);\n            this.updateSelectionUI();\n        },\n\n        /**\n         * Generate documents (placeholder)\n         */\n        generateDocuments: function() {\n            if (selectedRows.length === 0) {\n                alert('Please select entries first');\n                return;\n            }\n            \n            console.log('Generating documents for entries:', selectedRows);\n            alert('Document generation will be implemented here\\nSelected entries: ' + selectedRows.length);\n        },\n\n        /**\n         * Initialize Tabulator table\n         */\n        initializeTable: function(columns, processedData) {\n            var self = this;\n            \n            var enhancedColumns = this.prepareColumns(columns);\n\n            // Initialize table\n            table = new window.Tabulator(\"#valuemaps-table\", {\n                data: processedData,\n                columns: enhancedColumns,\n                layout: \"fitDataTable\",\n                height: \"600px\",\n                pagination: \"local\",\n                paginationSize: 20,\n                paginationSizeSelector: [10, 20, 50, 100],\n                movableColumns: true,\n                resizableRows: false,\n                selectable: false, // We handle selection manually\n                tooltips: true,\n                placeholder: \"No entries to display\",\n                persistence: {\n                    sort: true,\n                    filter: true,\n                    columns: true,\n                    page: true\n                },\n                persistenceID: \"ai-tools-valuemaps-table\",\n                locale: true,\n                langs: {\n                    \"default\": {\n                        \"pagination\": {\n                            \"page_size\": \"Page Size\",\n                            \"first\": \"First\",\n                            \"prev\": \"Prev\", \n                            \"next\": \"Next\",\n                            \"last\": \"Last\"\n                        },\n                        \"headerFilters\": {\n                            \"default\": \"Filter column...\"\n                        }\n                    }\n                },\n                rowFormatter: function(row) {\n                    var data = row.getData();\n                    \n                    // Style separator rows\n                    if (data.isSeparator) {\n                        row.getElement().style.backgroundColor = '#f8f9fa';\n                        row.getElement().style.fontWeight = 'bold';\n                        row.getElement().style.borderTop = '2px solid #dee2e6';\n                        row.getElement().style.borderBottom = '1px solid #dee2e6';\n                        \n                        // Set content for separator row - show title across all columns\n                        var cells = row.getCells();\n                        if (cells.length > 1) {\n                            // First cell gets the button, second cell gets the title\n                            cells[1].getElement().innerHTML = '<i class=\"fa fa-folder-open me-2\"></i>' + data.groupTitle;\n                            cells[1].getElement().style.fontWeight = 'bold';\n                            \n                            // Hide remaining cells\n                            for (var i = 2; i < cells.length; i++) {\n                                cells[i].getElement().style.display = 'none';\n                            }\n                            // Expand second cell to cover hidden ones\n                            cells[1].getElement().colSpan = cells.length - 1;\n                        }\n                        return;\n                    }\n                    \n                    // Style master entries\n                    if (data.ismaster === 1) {\n                        row.getElement().style.backgroundColor = '#eaffea';\n                        row.getElement().classList.add('ismaster');\n                    }\n                }\n            });\n\n            // Table events\n            table.on(\"tableBuilt\", function() {\n                console.log('[valuemaps_manager] Table built successfully');\n                \n                // Add user filter toggle\n                self.addUserFilterToggle(table);\n            });\n\n            // Double click to edit (for data rows only)\n            table.on(\"rowDblClick\", function(e, row) {\n                var data = row.getData();\n                if (!data.isSeparator) {\n                    window.open(data.edit_url, '_blank');\n                }\n            });\n\n            // Make manager globally available\n            window.valuemapsManager = this;\n        },\n\n        /**\n         * Add user filter toggle button\n         */\n        addUserFilterToggle: function(table) {\n            var self = this;\n            var toolbar = $('.card-header .table-controls');\n            if (toolbar.length === 0) {\n                return;\n            }\n\n            toolbar.append('<button type=\"button\" class=\"btn btn-sm btn-outline-info ms-2\" id=\"user-filter-toggle\">' +\n                          '<i class=\"fa fa-user\"></i> My Entries</button>');\n            \n            var showingOnlyMine = true;\n            $('#user-filter-toggle').on('click', function() {\n                var $btn = $(this);\n                if (showingOnlyMine) {\n                    // Show all entries (including separators)\n                    table.clearHeaderFilter(\"username\");\n                    $btn.html('<i class=\"fa fa-users\"></i> All Entries');\n                    $btn.removeClass('btn-outline-info').addClass('btn-outline-secondary');\n                    showingOnlyMine = false;\n                } else {\n                    // Show only user entries but keep separators visible\n                    self.filterToUserEntries(table);\n                    $btn.html('<i class=\"fa fa-user\"></i> My Entries');\n                    $btn.removeClass('btn-outline-secondary').addClass('btn-outline-info');\n                    showingOnlyMine = true;\n                }\n            });\n            \n            // Start with user entries filtered\n            this.filterToUserEntries(table);\n        },\n\n        /**\n         * Filter to user entries but keep separators\n         */\n        filterToUserEntries: function(table) {\n            var currentUserId = M.cfg.userid;\n            \n            table.setFilter(function(data) {\n                // Always show separators\n                if (data.isSeparator) {\n                    return true;\n                }\n                // Show only current user's entries\n                return data.userid == currentUserId;\n            });\n        },\n\n        /**\n         * Apply filters from form controls\n         */\n        applyFilters: function() {\n            if (!table) {\n                return;\n            }\n            \n            var courseFilter = $('#filter-course').val();\n            var activityFilter = $('#filter-activity').val();\n            var searchFilter = $('#search-entries').val();\n\n            // Build filter function\n            var filters = [];\n            \n            if (courseFilter) {\n                filters.push(function(data) {\n                    return data.isSeparator || data.course_name === courseFilter;\n                });\n            }\n            \n            if (activityFilter) {\n                filters.push(function(data) {\n                    return data.isSeparator || data.activity_name === activityFilter;\n                });\n            }\n            \n            if (searchFilter) {\n                filters.push(function(data) {\n                    if (data.isSeparator) {\n                        return data.groupTitle.toLowerCase().includes(searchFilter.toLowerCase());\n                    }\n                    // Search in various fields\n                    var searchFields = ['course_name', 'activity_name', 'username'];\n                    return searchFields.some(function(field) {\n                        var value = data[field];\n                        return value && value.toLowerCase().includes(searchFilter.toLowerCase());\n                    });\n                });\n            }\n\n            // Apply all filters\n            if (filters.length > 0) {\n                table.setFilter(function(data) {\n                    return filters.every(function(filter) {\n                        return filter(data);\n                    });\n                });\n            } else {\n                // If no filters, show according to user toggle\n                var isShowingAll = $('#user-filter-toggle').hasClass('btn-outline-secondary');\n                if (isShowingAll) {\n                    table.clearFilter();\n                } else {\n                    this.filterToUserEntries(table);\n                }\n            }\n        },\n\n        /**\n         * Clear all filters\n         */\n        clearFilters: function() {\n            $('#filter-course, #filter-activity').val('');\n            $('#search-entries').val('');\n            \n            if (table) {\n                // Reset to user entries view\n                this.filterToUserEntries(table);\n                \n                // Reset user toggle\n                var $btn = $('#user-filter-toggle');\n                $btn.html('<i class=\"fa fa-user\"></i> My Entries');\n                $btn.removeClass('btn-outline-secondary').addClass('btn-outline-info');\n            }\n        },\n\n        /**\n         * Show export options menu\n         */\n        showExportOptions: function() {\n            var self = this;\n            \n            var exportMenu = $('<div class=\"dropdown-menu dropdown-menu-end show\">' +\n                '<h6 class=\"dropdown-header\">Export Options</h6>' +\n                '<button class=\"dropdown-item\" data-format=\"csv\">' +\n                '<i class=\"fa fa-file-csv me-2\"></i>Export as CSV</button>' +\n                '<button class=\"dropdown-item\" data-format=\"json\">' +\n                '<i class=\"fa fa-file-code me-2\"></i>Export as JSON</button>' +\n                '</div>');\n\n            var exportBtn = $('#export-data');\n            var offset = exportBtn.offset();\n            exportMenu.css({\n                'position': 'absolute',\n                'top': offset.top + exportBtn.outerHeight(),\n                'left': offset.left - 150,\n                'z-index': 1050\n            });\n\n            exportMenu.find('[data-format]').on('click', function() {\n                var format = $(this).data('format');\n                self.exportData(format);\n                exportMenu.remove();\n            });\n\n            $(document).one('click', function() {\n                exportMenu.remove();\n            });\n\n            $('body').append(exportMenu);\n        },\n\n        /**\n         * Export table data (filter out separators)\n         */\n        exportData: function(format) {\n            if (!table) {\n                return;\n            }\n\n            var filename = 'valuemap_entries_' + new Date().toISOString().slice(0,10);\n            var exportData = table.getData().filter(function(row) {\n                return !row.isSeparator;\n            });\n\n            if (format === 'csv') {\n                table.download(\"csv\", filename + \".csv\", {}, \"active\");\n            } else if (format === 'json') {\n                var dataStr = JSON.stringify(exportData, null, 2);\n                var dataBlob = new Blob([dataStr], {type: 'application/json'});\n                var url = URL.createObjectURL(dataBlob);\n                var link = document.createElement('a');\n                link.href = url;\n                link.download = filename + '.json';\n                link.click();\n                URL.revokeObjectURL(url);\n            }\n        },\n\n        /**\n         * Toggle fullscreen mode\n         */\n        toggleFullscreen: function() {\n            $('body').toggleClass('valuemapdoc-fullscreen');\n            \n            var $btn = $('#toggle-fullscreen');\n            if ($('body').hasClass('valuemapdoc-fullscreen')) {\n                $btn.html('<i class=\"fa fa-compress\"></i> Exit Fullscreen');\n                if (table) {\n                    table.redraw(true);\n                }\n            } else {\n                $btn.html('<i class=\"fa fa-expand\"></i> Fullscreen');\n                if (table) {\n                    table.redraw(true);\n                }\n            }\n        },\n\n        /**\n         * Show different states\n         */\n        showLoadingState: function() {\n            $('#loading-overlay').show();\n            $('#valuemaps-table').hide();\n            $('#empty-state').hide();\n            $('#error-state').hide();\n        },\n\n        showTableState: function() {\n            $('#loading-overlay').hide();\n            $('#valuemaps-table').show();\n            $('#empty-state').hide();\n            $('#error-state').hide();\n        },\n\n        showEmptyState: function() {\n            $('#loading-overlay').hide();\n            $('#valuemaps-table').hide();\n            $('#empty-state').show();\n            $('#error-state').hide();\n        },\n\n        showErrorState: function(message) {\n            $('#loading-overlay').hide();\n            $('#valuemaps-table').hide();\n            $('#empty-state').hide();\n            $('#error-state').show();\n            $('#error-message').text(message);\n        }\n    };\n});"],"names":["define","$","Ajax","Notification","table","config","window","valuemapsConfig","allData","processedData","selectedRows","init","console","log","columnsElement","document","querySelector","textContent","columns","JSON","parse","e","error","Array","isArray","waitForTabulator","warn","self","this","Tabulator","bindEvents","loadData","setTimeout","on","showExportOptions","clearFilters","applyFilters","toggleFullscreen","showLoadingState","call","methodname","args","userid","done","data","entries","length","Object","keys","market","role","entry_data","updateStatistics","statistics","populateFilterOptions","processDataWithSeparators","initializeTable","showTableState","showEmptyState","fail","showErrorState","message","exception","currentGroup","forEach","entry","groupKey","course_name","activity_name","push","id","isSeparator","groupTitle","cmid","edit_url","M","cfg","wwwroot","stats","text","total_entries","unique_courses","unique_activities","courseSelect","find","remove","courses_list","course","append","activitySelect","activities_list","activity","prepareColumns","enhancedColumns","formatter","cell","formatterParams","getRow","getData","width","hozAlign","headerSort","cellClick","stopPropagation","toggleRowSelection","col","title","field","headerFilter","editable","value","getValue","ismaster","entryId","checkbox","isSelected","prop","filter","updateSelectionUI","count","selectionInfo","prepend","generateDocuments","bind","clearSelection","alert","layout","height","pagination","paginationSize","paginationSizeSelector","movableColumns","resizableRows","selectable","tooltips","placeholder","persistence","sort","page","persistenceID","locale","langs","rowFormatter","row","getElement","style","backgroundColor","fontWeight","borderTop","borderBottom","cells","getCells","innerHTML","i","display","colSpan","classList","add","addUserFilterToggle","open","valuemapsManager","toolbar","showingOnlyMine","$btn","clearHeaderFilter","html","removeClass","addClass","filterToUserEntries","currentUserId","setFilter","courseFilter","val","activityFilter","searchFilter","filters","toLowerCase","includes","some","every","hasClass","clearFilter","exportMenu","exportBtn","offset","css","top","outerHeight","left","format","exportData","one","filename","Date","toISOString","slice","download","dataStr","stringify","dataBlob","Blob","type","url","URL","createObjectURL","link","createElement","href","click","revokeObjectURL","toggleClass","redraw","show","hide"],"mappings":"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"}