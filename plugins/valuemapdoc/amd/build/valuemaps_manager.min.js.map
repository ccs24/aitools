{"version":3,"file":"valuemaps_manager.min.js","sources":["../src/valuemaps_manager.js"],"sourcesContent":["/* eslint-env es6 */\n/* eslint-disable max-len */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-console */\n/* eslint-disable no-trailing-spaces */\n\n/**\n * Value Maps manager with local Tabulator.js - inspired by mod_valuemapdoc\n */\ndefine([\n    'aitoolsub_valuemapdoc/tabulatorlib',\n    'jquery', \n    'core/ajax', \n    'core/notification'\n], function(\n    Tabulator,\n    $, \n    Ajax, \n    Notification\n) {\n    \n    var table;\n    var config = window.valuemapsConfig || {};\n    var allData = [];\n    var currentUsername = M.cfg.fullname || M.cfg.username || 'Me';\n\n    return {\n        init: function() {\n            console.log('[valuemaps_manager] Module loaded with Tabulator');\n            this.bindEvents();\n            this.loadData();\n        },\n\n        bindEvents: function() {\n            // Refresh data button\n            $('#refresh-data').on('click', this.loadData.bind(this));\n            \n            // Export data button  \n            $('#export-data').on('click', this.showExportOptions.bind(this));\n            \n            // Clear filters button\n            $('#clear-filters').on('click', this.clearFilters.bind(this));\n            \n            // Toggle columns button\n            $('#toggle-columns').on('click', this.showColumnModal.bind(this));\n            \n            // Filter controls\n            $('#filter-course, #filter-activity, #filter-type').on('change', this.applyFilters.bind(this));\n            $('#search-entries').on('input', this.applyFilters.bind(this));\n            \n            // Retry loading button\n            $('#retry-loading').on('click', this.loadData.bind(this));\n            \n            // Column modal apply button\n            $('#apply-columns').on('click', this.applyColumnVisibility.bind(this));\n            \n            // Fullscreen toggle (inspired by mod_valuemapdoc)\n            $('#toggle-fullscreen').on('click', this.toggleFullscreen.bind(this));\n        },\n\n        loadData: function() {\n            var self = this;\n            \n            // Show loading state\n            this.showLoadingState();\n            \n            // Call AJAX service\n            var promises = Ajax.call([{\n                methodname: 'aitoolsub_valuemapdoc_get_all_entries_global',\n                args: {\n                    userid: config.userid || 0\n                }\n            }]);\n\n            promises[0].done(function(data) {\n                allData = data.entries || [];\n                \n                // Parse entry_data JSON strings back to objects\n                allData = allData.map(function(entry) {\n                    if (typeof entry.entry_data === 'string') {\n                        try {\n                            entry.entry_data = JSON.parse(entry.entry_data);\n                        } catch (e) {\n                            console.warn('Could not parse entry_data for entry', entry.id, e);\n                            entry.entry_data = {};\n                        }\n                    }\n                    return entry;\n                });\n                \n                console.log('[valuemaps_manager] Entries loaded:', allData.length, 'records');\n                \n                // Update statistics\n                self.updateStatistics(data.statistics);\n                \n                // Populate filter options\n                self.populateFilterOptions(data);\n                \n                // Initialize or update table\n                if (allData.length > 0) {\n                    self.initializeTable();\n                    self.showTableState();\n                } else {\n                    self.showEmptyState();\n                }\n                \n            }).fail(function(error) {\n                console.error('[valuemaps_manager] Failed to load entries:', error);\n                self.showErrorState(error.message || 'Unknown error occurred');\n                Notification.exception(error);\n            });\n        },\n\n        showLoadingState: function() {\n            $('#loading-overlay').show();\n            $('#valuemaps-table').hide();\n            $('#empty-state').hide();\n            $('#error-state').hide();\n        },\n\n        showTableState: function() {\n            $('#loading-overlay').hide();\n            $('#valuemaps-table').show();\n            $('#empty-state').hide();\n            $('#error-state').hide();\n        },\n\n        showEmptyState: function() {\n            $('#loading-overlay').hide();\n            $('#valuemaps-table').hide();\n            $('#empty-state').show();\n            $('#error-state').hide();\n        },\n\n        showErrorState: function(message) {\n            $('#loading-overlay').hide();\n            $('#valuemaps-table').hide();\n            $('#empty-state').hide();\n            $('#error-state').show();\n            $('#error-message').text(message);\n        },\n\n        updateStatistics: function(stats) {\n            $('#stat-total-entries').html(stats.total_entries || 0);\n            $('#stat-unique-courses').html(stats.unique_courses || 0);\n            $('#stat-unique-activities').html(stats.unique_activities || 0);\n        },\n\n        populateFilterOptions: function(data) {\n            // Populate course filter\n            var courseSelect = $('#filter-course');\n            courseSelect.empty().append('<option value=\"\">All Courses</option>');\n            if (data.statistics && data.statistics.courses_list) {\n                data.statistics.courses_list.forEach(function(course) {\n                    courseSelect.append($('<option>').val(course).text(course));\n                });\n            }\n            \n            // Populate activity filter\n            var activitySelect = $('#filter-activity');\n            activitySelect.empty().append('<option value=\"\">All Activities</option>');\n            if (data.statistics && data.statistics.activities_list) {\n                data.statistics.activities_list.forEach(function(activity) {\n                    activitySelect.append($('<option>').val(activity).text(activity));\n                });\n            }\n        },\n\n        initializeTable: function() {\n            var self = this;\n            \n            // Destroy existing table if it exists\n            if (table) {\n                table.destroy();\n            }\n\n            // Enhanced columns similar to mod_valuemapdoc approach\n            var columns = [\n                {\n                    title: config.strings.id || \"ID\",\n                    field: \"id\",\n                    width: 80,\n                    frozen: true,\n                    headerFilter: \"input\",\n                    headerFilterPlaceholder: \"Filter ID...\",\n                    headerSort: true\n                },\n                {\n                    title: config.strings.course || \"Course\",\n                    field: \"course_name\",\n                    width: 200,\n                    headerFilter: \"input\",\n                    headerFilterPlaceholder: \"Filter course...\",\n                    formatter: function(cell) {\n                        var data = cell.getRow().getData();\n                        return '<strong>' + data.course_name + '</strong><br>' +\n                               '<small class=\"text-muted\">(' + data.course_shortname + ')</small>';\n                    }\n                },\n                {\n                    title: config.strings.activity || \"Activity\", \n                    field: \"activity_name\",\n                    width: 180,\n                    headerFilter: \"input\",\n                    headerFilterPlaceholder: \"Filter activity...\"\n                },\n                {\n                    title: config.strings.entry_type || \"Type\",\n                    field: \"entry_type\",\n                    width: 130,\n                    headerFilter: \"select\",\n                    headerFilterParams: {\n                        \"customer_profile\": \"Customer Profile\",\n                        \"value_proposition\": \"Value Proposition\", \n                        \"pain_analysis\": \"Pain Analysis\",\n                        \"value_map\": \"Value Map\",\n                        \"general\": \"General\"\n                    },\n                    formatter: function(cell) {\n                        var value = cell.getValue();\n                        var badges = {\n                            'customer_profile': 'bg-primary',\n                            'value_proposition': 'bg-success',\n                            'pain_analysis': 'bg-warning',\n                            'value_map': 'bg-info',\n                            'general': 'bg-secondary'\n                        };\n                        return '<span class=\"badge ' + (badges[value] || 'bg-secondary') + '\">' + \n                               self.formatTypeName(value) + '</span>';\n                    }\n                },\n                {\n                    title: config.strings.preview || \"Preview\",\n                    field: \"entry_preview\",\n                    width: 300,\n                    headerFilter: \"input\",\n                    headerFilterPlaceholder: \"Search preview...\",\n                    formatter: function(cell) {\n                        var preview = cell.getValue();\n                        return '<div class=\"text-truncate\" title=\"' + preview + '\">' + preview + '</div>';\n                    }\n                },\n                {\n                    title: config.strings.created || \"Created\",\n                    field: \"timecreated_relative\", \n                    width: 120,\n                    sorter: function(a, b, aRow, bRow) {\n                        return aRow.getData().timecreated - bRow.getData().timecreated;\n                    },\n                    formatter: function(cell) {\n                        var data = cell.getRow().getData();\n                        return '<span title=\"' + data.timecreated_formatted + '\">' + \n                               data.timecreated_relative + '</span>';\n                    }\n                },\n                {\n                    title: config.strings.modified || \"Modified\",\n                    field: \"timemodified_relative\",\n                    width: 120,\n                    sorter: function(a, b, aRow, bRow) {\n                        return aRow.getData().timemodified - bRow.getData().timemodified;\n                    },\n                    formatter: function(cell) {\n                        var data = cell.getRow().getData();\n                        return '<span title=\"' + data.timemodified_formatted + '\">' + \n                               data.timemodified_relative + '</span>';\n                    }\n                },\n                {\n                    title: config.strings.actions || \"Actions\",\n                    field: \"actions\",\n                    width: 160,\n                    headerSort: false,\n                    formatter: function(cell) {\n                        var data = cell.getRow().getData();\n                        return '<div class=\"btn-group btn-group-sm\" role=\"group\">' +\n                               '<a href=\"' + data.view_url + '\" class=\"btn btn-outline-primary btn-sm\" title=\"View Entry\">' +\n                               '<i class=\"fa fa-eye\"></i></a>' +\n                               '<a href=\"' + data.edit_url + '\" class=\"btn btn-outline-secondary btn-sm\" title=\"Edit in Activity\">' + \n                               '<i class=\"fa fa-edit\"></i></a>' +\n                               '<button class=\"btn btn-outline-info btn-sm\" onclick=\"window.valuemapsManager.showEntryDetails(' + data.id + ')\" title=\"Show Details\">' +\n                               '<i class=\"fa fa-info-circle\"></i></button>' +\n                               '</div>';\n                    }\n                }\n            ];\n\n            // Initialize Tabulator with settings similar to mod_valuemapdoc\n            // eslint-disable-next-line no-undef\n            table = new Tabulator(\"#valuemaps-table\", {\n                data: allData,\n                columns: columns,\n                layout: \"fitDataTable\",\n                responsiveLayout: \"collapse\",\n                height: \"600px\",\n                pagination: \"local\",\n                paginationSize: 20,\n                paginationSizeSelector: [10, 20, 50, 100],\n                movableColumns: true,\n                resizableRows: false,\n                selectable: false, // Różnica - brak selection w AI Tools\n                tooltips: true,\n                placeholder: \"No entries to display\",\n                persistence: {\n                    sort: true,\n                    filter: true,\n                    columns: true,\n                    page: true\n                },\n                persistenceID: \"ai-tools-valuemaps-table\",\n                locale: true,\n                langs: {\n                    \"default\": {\n                        \"pagination\": {\n                            \"page_size\": \"Page Size\",\n                            \"first\": \"First\",\n                            \"prev\": \"Prev\",\n                            \"next\": \"Next\", \n                            \"last\": \"Last\"\n                        },\n                        \"headerFilters\": {\n                            \"default\": \"Filter column...\"\n                        }\n                    }\n                }\n            });\n\n            // Wait for table to build\n            table.on(\"tableBuilt\", function(){\n                console.log('[valuemaps_manager] Table built successfully');\n                \n                // Add user filter toggle (inspired by mod_valuemapdoc)\n                self.addUserFilterToggle();\n            });\n\n            // Handle double-click to open edit in activity context (like mod_valuemapdoc)\n            table.on(\"rowDblClick\", function(e, row){\n                var data = row.getData();\n                var editUrl = data.edit_url;\n                window.open(editUrl, '_blank');\n            });\n\n            // Make manager globally available for action buttons\n            window.valuemapsManager = this;\n        },\n\n        addUserFilterToggle: function() {\n            // Add toggle button similar to mod_valuemapdoc approach\n            var toolbar = $('.card-header .table-controls');\n            if (toolbar.length === 0) {\n                return;\n            }\n\n            var toggleHtml = '<button type=\"button\" class=\"btn btn-sm btn-outline-info ms-2\" id=\"user-filter-toggle\">' +\n                           '<i class=\"fa fa-user\"></i> My Entries</button>';\n            \n            toolbar.prepend(toggleHtml);\n\n            var showingAll = true;\n            $('#user-filter-toggle').on('click', function() {\n                var $btn = $(this);\n                \n                if (showingAll) {\n                    // Note: Since we don't have username in entries data,\n                    // this would need to be implemented differently\n                    // For now it's a placeholder\n                    $btn.html('<i class=\"fa fa-users\"></i> All Entries');\n                    $btn.removeClass('btn-outline-info').addClass('btn-outline-secondary');\n                    showingAll = false;\n                } else {\n                    // Show all entries\n                    if (table) {\n                        table.clearFilter();\n                    }\n                    $btn.html('<i class=\"fa fa-user\"></i> My Entries'); \n                    $btn.removeClass('btn-outline-secondary').addClass('btn-outline-info');\n                    showingAll = true;\n                }\n            });\n        },\n\n        toggleFullscreen: function() {\n            // Similar to mod_valuemapdoc fullscreen toggle\n            $('body').toggleClass('valuemapdoc-fullscreen');\n            var $btn = $('#toggle-fullscreen');\n            \n            if ($('body').hasClass('valuemapdoc-fullscreen')) {\n                $btn.html('<i class=\"fa fa-compress\"></i> Exit Fullscreen');\n                \n                // Adjust table height in fullscreen\n                if (table) {\n                    table.redraw(true);\n                }\n            } else {\n                $btn.html('<i class=\"fa fa-expand\"></i> Fullscreen');\n                \n                // Reset table height\n                if (table) {\n                    table.redraw(true);\n                }\n            }\n        },\n\n        showEntryDetails: function(entryId) {\n            // Find entry data\n            var entryData = allData.find(function(entry) {\n                return entry.id === entryId;\n            });\n            \n            if (!entryData) {\n                return;\n            }\n\n            // Create modal with entry details (similar to mod_valuemapdoc patterns)\n            var modalHtml = '<div class=\"modal fade\" id=\"entryDetailsModal\" tabindex=\"-1\">' +\n                          '<div class=\"modal-dialog modal-lg\">' +\n                          '<div class=\"modal-content\">' +\n                          '<div class=\"modal-header\">' +\n                          '<h5 class=\"modal-title\">Entry Details</h5>' +\n                          '<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"></button>' +\n                          '</div>' +\n                          '<div class=\"modal-body\">' +\n                          '<div class=\"row mb-3\">' +\n                          '<div class=\"col-md-6\"><strong>Course:</strong><br>' + entryData.course_name + '</div>' +\n                          '<div class=\"col-md-6\"><strong>Activity:</strong><br>' + entryData.activity_name + '</div>' +\n                          '</div>' +\n                          '<div class=\"row mb-3\">' +\n                          '<div class=\"col-md-6\"><strong>Type:</strong><br>' + \n                          '<span class=\"badge ' + this.getTypeBadgeClass(entryData.entry_type) + '\">' + \n                          this.formatTypeName(entryData.entry_type) + '</span></div>' +\n                          '<div class=\"col-md-6\"><strong>Created:</strong><br>' + entryData.timecreated_formatted + '</div>' +\n                          '</div>' +\n                          '<div class=\"mb-3\"><strong>Preview:</strong><br>' +\n                          '<div class=\"border rounded p-3 bg-light\">' + entryData.entry_preview + '</div></div>' +\n                          '</div>' +\n                          '<div class=\"modal-footer\">' +\n                          '<a href=\"' + entryData.edit_url + '\" class=\"btn btn-primary\" target=\"_blank\">' +\n                          '<i class=\"fa fa-edit\"></i> Edit in Activity</a>' +\n                          '<button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>' +\n                          '</div>' +\n                          '</div></div></div>';\n\n            // Remove existing modal and add new one\n            $('#entryDetailsModal').remove();\n            $('body').append(modalHtml);\n            $('#entryDetailsModal').modal('show');\n        },\n\n        getTypeBadgeClass: function(type) {\n            var badges = {\n                'customer_profile': 'bg-primary',\n                'value_proposition': 'bg-success',\n                'pain_analysis': 'bg-warning',\n                'value_map': 'bg-info',\n                'general': 'bg-secondary'\n            };\n            return badges[type] || 'bg-secondary';\n        },\n\n        formatTypeName: function(type) {\n            var names = {\n                'customer_profile': 'Customer Profile',\n                'value_proposition': 'Value Proposition',\n                'pain_analysis': 'Pain Analysis', \n                'value_map': 'Value Map',\n                'general': 'General',\n                'unknown': 'Unknown'\n            };\n            return names[type] || type;\n        },\n\n        applyFilters: function() {\n            if (!table) {\n                return;\n            }\n            \n            var courseFilter = $('#filter-course').val();\n            var activityFilter = $('#filter-activity').val();\n            var typeFilter = $('#filter-type').val();\n            var searchFilter = $('#search-entries').val();\n\n            // Clear existing filters\n            table.clearFilter();\n\n            // Apply filters (similar to mod_valuemapdoc approach)\n            if (courseFilter) {\n                table.addFilter(\"course_name\", \"=\", courseFilter);\n            }\n            if (activityFilter) {\n                table.addFilter(\"activity_name\", \"=\", activityFilter);\n            }\n            if (typeFilter) {\n                table.addFilter(\"entry_type\", \"=\", typeFilter);\n            }\n            if (searchFilter) {\n                table.addFilter([\n                    {field: \"entry_preview\", type: \"like\", value: searchFilter},\n                    {field: \"course_name\", type: \"like\", value: searchFilter},\n                    {field: \"activity_name\", type: \"like\", value: searchFilter}\n                ]);\n            }\n        },\n\n        clearFilters: function() {\n            // Clear form filters\n            $('#filter-course, #filter-activity, #filter-type').val('');\n            $('#search-entries').val('');\n            \n            // Clear table filters\n            if (table) {\n                table.clearFilter();\n                table.clearHeaderFilter();\n            }\n        },\n\n        showExportOptions: function() {\n            var self = this;\n            \n            var exportMenu = $('<div class=\"dropdown-menu dropdown-menu-end show\">' +\n                '<h6 class=\"dropdown-header\">Export Options</h6>' +\n                '<button class=\"dropdown-item\" data-format=\"csv\">' +\n                '<i class=\"fa fa-file-csv me-2\"></i>Export as CSV</button>' +\n                '<button class=\"dropdown-item\" data-format=\"json\">' +\n                '<i class=\"fa fa-file-code me-2\"></i>Export as JSON</button>' +\n                '<button class=\"dropdown-item\" data-format=\"xlsx\">' +\n                '<i class=\"fa fa-file-excel me-2\"></i>Export as Excel</button>' +\n                '</div>');\n            \n            var exportBtn = $('#export-data');\n            var offset = exportBtn.offset();\n            \n            $('body').append(exportMenu);\n            exportMenu.css({\n                position: 'absolute',\n                top: offset.top + exportBtn.outerHeight(),\n                left: offset.left + exportBtn.outerWidth() - exportMenu.outerWidth(),\n                zIndex: 1050\n            });\n            \n            exportMenu.on('click', '.dropdown-item', function(e) {\n                var format = $(this).data('format');\n                self.exportData(format);\n                exportMenu.remove();\n            });\n            \n            $(document).one('click', function() {\n                exportMenu.remove();\n            });\n        },\n\n        exportData: function(format) {\n            if (!table) {\n                return;\n            }\n            \n            var filename = \"valuemap_entries_\" + new Date().toISOString().slice(0, 10);\n            \n            // Use Tabulator's built-in export functions (same as mod_valuemapdoc)\n            switch (format) {\n                case 'csv':\n                    table.download(\"csv\", filename + \".csv\");\n                    break;\n                case 'json':\n                    table.download(\"json\", filename + \".json\");\n                    break;\n                case 'xlsx':\n                    table.download(\"xlsx\", filename + \".xlsx\", {sheetName: \"Value Map Entries\"});\n                    break;\n            }\n        },\n\n        showColumnModal: function() {\n            this.setupColumnModal();\n            $('#columnModal').modal('show');\n        },\n\n        setupColumnModal: function() {\n            if (!table) {\n                return;\n            }\n            \n            var checkboxContainer = $('#column-checkboxes');\n            checkboxContainer.empty();\n            \n            var columns = table.getColumnDefinitions();\n            columns.forEach(function(col) {\n                if (col.field && col.field !== 'actions') {\n                    var isVisible = table.getColumn(col.field).isVisible();\n                    var checkbox = $('<div class=\"form-check\">' +\n                        '<input class=\"form-check-input\" type=\"checkbox\" id=\"col-' + col.field + '\" ' +\n                        (isVisible ? 'checked' : '') + '>' +\n                        '<label class=\"form-check-label\" for=\"col-' + col.field + '\">' + \n                        col.title + '</label>' +\n                        '</div>');\n                    checkboxContainer.append(checkbox);\n                }\n            });\n        },\n\n        applyColumnVisibility: function() {\n            if (!table) {\n                return;\n            }\n            \n            $('#column-checkboxes .form-check-input').each(function() {\n                var field = $(this).attr('id').replace('col-', '');\n                var isChecked = $(this).is(':checked');\n                var column = table.getColumn(field);\n                \n                if (column) {\n                    if (isChecked) {\n                        column.show();\n                    } else {\n                        column.hide();\n                    }\n                }\n            });\n            \n            $('#columnModal').modal('hide');\n        }\n    };\n});"],"names":["define","Tabulator","$","Ajax","Notification","table","config","window","valuemapsConfig","allData","M","cfg","fullname","username","init","console","log","bindEvents","loadData","on","this","bind","showExportOptions","clearFilters","showColumnModal","applyFilters","applyColumnVisibility","toggleFullscreen","self","showLoadingState","call","methodname","args","userid","done","data","entries","map","entry","entry_data","JSON","parse","e","warn","id","length","updateStatistics","statistics","populateFilterOptions","initializeTable","showTableState","showEmptyState","fail","error","showErrorState","message","exception","show","hide","text","stats","html","total_entries","unique_courses","unique_activities","courseSelect","empty","append","courses_list","forEach","course","val","activitySelect","activities_list","activity","destroy","columns","title","strings","field","width","frozen","headerFilter","headerFilterPlaceholder","headerSort","formatter","cell","getRow","getData","course_name","course_shortname","entry_type","headerFilterParams","value","getValue","formatTypeName","preview","created","sorter","a","b","aRow","bRow","timecreated","timecreated_formatted","timecreated_relative","modified","timemodified","timemodified_formatted","timemodified_relative","actions","view_url","edit_url","layout","responsiveLayout","height","pagination","paginationSize","paginationSizeSelector","movableColumns","resizableRows","selectable","tooltips","placeholder","persistence","sort","filter","page","persistenceID","locale","langs","addUserFilterToggle","row","editUrl","open","valuemapsManager","toolbar","prepend","showingAll","$btn","removeClass","addClass","clearFilter","toggleClass","hasClass","redraw","showEntryDetails","entryId","entryData","find","modalHtml","activity_name","getTypeBadgeClass","entry_preview","remove","modal","type","courseFilter","activityFilter","typeFilter","searchFilter","addFilter","clearHeaderFilter","exportMenu","exportBtn","offset","css","position","top","outerHeight","left","outerWidth","zIndex","format","exportData","document","one","filename","Date","toISOString","slice","download","sheetName","setupColumnModal","checkboxContainer","getColumnDefinitions","col","isVisible","getColumn","checkbox","each","attr","replace","isChecked","is","column"],"mappings":"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"}