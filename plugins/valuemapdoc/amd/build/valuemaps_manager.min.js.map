{"version":3,"file":"valuemaps_manager.min.js","sources":["../src/valuemaps_manager.js"],"sourcesContent":["/**\n * ValueMaps Manager for AI Tools Subplugin\n * \n * Manages the value maps table interface with Tabulator (similar to module but with groups)\n * \n * @module aitoolsub_valuemapdoc/valuemaps_manager\n * @copyright 2024 Your Organization\n */\n\ndefine(['jquery', 'core/ajax', 'core/notification'], function($, Ajax, Notification) {\n    \n    var table = null;\n    var config = window.valuemapsConfig || {};\n    var allData = [];\n    var username = M.cfg.fullname || M.cfg.username;\n\n    return {\n        /**\n         * Initialize the valuemaps manager\n         */\n        init: function() {\n            console.log('[valuemaps_manager] Module loaded');\n            \n            // Get columns from element (same pattern as module)\n            var columnsElement = document.querySelector('#valuemap-columns');\n            if (!columnsElement || !columnsElement.textContent) {\n                console.warn('[valuemaps_manager] Columns not found');\n                return;\n            }\n\n            var columns;\n            try {\n                columns = JSON.parse(columnsElement.textContent);\n                console.log('[valuemaps_manager] Parsed columns:', columns);\n            } catch (e) {\n                console.error('[valuemaps_manager] Error parsing columns:', e);\n                return;\n            }\n\n            if (!Array.isArray(columns)) {\n                console.error('[valuemaps_manager] Columns is not an array');\n                return;\n            }\n\n            // Wait for Tabulator to be available\n            this.waitForTabulator(columns);\n        },\n\n        /**\n         * Wait for Tabulator library to be loaded\n         */\n        waitForTabulator: function(columns) {\n            var self = this;\n            \n            if (typeof window.Tabulator !== 'undefined') {\n                console.log('[valuemaps_manager] Tabulator available, initializing...');\n                this.bindEvents();\n                this.loadData(columns);\n            } else {\n                console.log('[valuemaps_manager] Waiting for Tabulator...');\n                setTimeout(function() {\n                    self.waitForTabulator(columns);\n                }, 100);\n            }\n        },\n\n        /**\n         * Bind event handlers\n         */\n        bindEvents: function() {\n            var self = this;\n            \n            // Refresh data\n            $('#refresh-data').on('click', function() {\n                self.init();\n            });\n            \n            // Export data\n            $('#export-data').on('click', function() {\n                self.showExportOptions();\n            });\n            \n            // Clear filters\n            $('#clear-filters').on('click', function() {\n                self.clearFilters();\n            });\n            \n            // Filter controls\n            $('#filter-course, #filter-activity, #filter-type').on('change', function() {\n                self.applyFilters();\n            });\n            \n            $('#search-entries').on('input', function() {\n                self.applyFilters();\n            });\n            \n            // Retry loading\n            $('#retry-loading').on('click', function() {\n                self.init();\n            });\n            \n            // Fullscreen toggle\n            $('#toggle-fullscreen').on('click', function() {\n                self.toggleFullscreen();\n            });\n        },\n\n        /**\n         * Load data from server\n         */\n        loadData: function(columns) {\n            var self = this;\n            this.showLoadingState();\n            \n            Ajax.call([{\n                methodname: 'aitoolsub_valuemapdoc_get_all_entries_global',\n                args: {\n                    userid: config.userid || 0\n                }\n            }])[0].done(function(data) {\n                allData = data.entries || [];\n                \n                console.log('[valuemaps_manager] Entries loaded:', allData, 'records');\n                \n                // Update statistics\n                self.updateStatistics(data.statistics);\n                \n                // Populate filter options\n                self.populateFilterOptions(data);\n                \n                // Process data with group separators\n                var processedData = self.processDataWithSeparators(allData);\n                \n                // Initialize or update table\n                if (processedData.length > 0) {\n                    self.initializeTable(columns, processedData);\n                    self.showTableState();\n                } else {\n                    self.showEmptyState();\n                }\n                \n            }).fail(function(error) {\n                console.error('[valuemaps_manager] Failed to load entries:', error);\n                self.showErrorState(error.message || 'Unknown error occurred');\n                Notification.exception(error);\n            });\n        },\n\n        /**\n         * Process data and add group separators\n         */\n        processDataWithSeparators: function(entries) {\n            if (entries.length === 0) {\n                return [];\n            }\n\n            var processedData = [];\n            var currentGroup = null;\n\n            // Data is already sorted by course_name, activity_name, timemodified\n            entries.forEach(function(entry) {\n                var groupKey = entry.course_name + ' â†’ ' + entry.activity_name;\n                \n                // Add separator row when group changes\n                if (currentGroup !== groupKey) {\n                    processedData.push({\n                        id: 'separator_' + processedData.length,\n                        isSeparator: true,\n                        groupTitle: groupKey,\n                        course_name: entry.course_name,\n                        activity_name: entry.activity_name\n                    });\n                    currentGroup = groupKey;\n                }\n                \n                // Add actual entry\n                processedData.push(entry);\n            });\n\n            return processedData;\n        },\n\n        /**\n         * Update statistics display\n         */\n        updateStatistics: function(stats) {\n            $('#stat-total-entries').text(stats.total_entries || 0);\n            $('#stat-unique-courses').text(stats.unique_courses || 0);\n            $('#stat-unique-activities').text(stats.unique_activities || 0);\n        },\n\n        /**\n         * Populate filter dropdowns\n         */\n        populateFilterOptions: function(data) {\n            var stats = data.statistics || {};\n            \n            // Courses\n            var courseSelect = $('#filter-course');\n            courseSelect.find('option:not(:first)').remove();\n            if (stats.courses_list) {\n                stats.courses_list.forEach(function(course) {\n                    courseSelect.append('<option value=\"' + course + '\">' + course + '</option>');\n                });\n            }\n            \n            // Activities\n            var activitySelect = $('#filter-activity');\n            activitySelect.find('option:not(:first)').remove();\n            if (stats.activities_list) {\n                stats.activities_list.forEach(function(activity) {\n                    activitySelect.append('<option value=\"' + activity + '\">' + activity + '</option>');\n                });\n            }\n        },\n\n        /**\n         * Get username from response data for current user\n         */\n        getUsernameFromResponse: function(response) {\n            var currentUserId = M.cfg.userid;\n            var userEntry = response.find(function(entry) {\n                return entry.userid == currentUserId;\n            });\n            \n            if (userEntry && userEntry.username) {\n                return userEntry.username;\n            }\n            \n            return M.cfg.fullname || M.cfg.username || 'Ja';\n        },\n\n        /**\n         * Prepare columns like in module (adapted for subplugin)\n         */\n        prepareColumns: function(columns) {\n            var self = this;\n            var enhancedColumns = [];\n            \n            // Add mapped columns from user's field level\n            columns.forEach(function(col) {\n                enhancedColumns.push({\n                    title: col.title,\n                    field: col.field,\n                    hozAlign: col.hozAlign || 'left',\n                    headerSort: col.headerSort !== false,\n                    width: col.width || 150,\n                    headerFilter: \"input\",\n                    editable: false, // View-only in subplugin\n                    formatter: function(cell) {\n                        var row = cell.getRow();\n                        if (row.getData().isSeparator) {\n                            return ''; // Empty for separator rows\n                        }\n                        \n                        var value = cell.getValue();\n                        if (value && value.length > 50) {\n                            return '<div class=\"text-truncate\" style=\"max-width: ' + (col.width - 20) + 'px;\" title=\"' + \n                                   value + '\">' + value + '</div>';\n                        }\n                        return value || '';\n                    }\n                });\n            });\n            \n            // Add username column (like in module)\n            enhancedColumns.push({\n                title: \"Author\",\n                field: \"username\", \n                hozAlign: \"left\",\n                headerSort: true,\n                width: 120,\n                headerFilter: \"input\",\n                editable: false,\n                formatter: function(cell) {\n                    var row = cell.getRow();\n                    if (row.getData().isSeparator) {\n                        return '';\n                    }\n                    \n                    var value = cell.getValue();\n                    var data = row.getData();\n                    if (data.ismaster === 1) {\n                        return '<i class=\"fa fa-star text-warning\" title=\"Master entry\"></i> ' + value;\n                    }\n                    return value;\n                }\n            });\n\n            // Add actions column\n            enhancedColumns.push({\n                title: \"Actions\",\n                field: \"actions\",\n                width: 120,\n                headerSort: false,\n                formatter: function(cell) {\n                    var row = cell.getRow();\n                    var data = row.getData();\n                    \n                    if (data.isSeparator) {\n                        return '';\n                    }\n                    \n                    return '<div class=\"btn-group btn-group-sm\" role=\"group\">' +\n                           '<a href=\"' + data.view_url + '\" class=\"btn btn-outline-primary btn-sm\" title=\"View Entry\">' +\n                           '<i class=\"fa fa-eye\"></i></a>' +\n                           '<a href=\"' + data.edit_url + '\" class=\"btn btn-outline-secondary btn-sm\" title=\"Edit in Activity\" target=\"_blank\">' +\n                           '<i class=\"fa fa-edit\"></i></a>' +\n                           '</div>';\n                }\n            });\n\n            return enhancedColumns;\n        },\n\n        /**\n         * Initialize Tabulator table\n         */\n        initializeTable: function(columns, processedData) {\n            var self = this;\n            \n            var enhancedColumns = this.prepareColumns(columns);\n            var currentUsername = this.getUsernameFromResponse(allData);\n\n            // Initialize table (similar to module)\n            table = new window.Tabulator(\"#valuemaps-table\", {\n                data: processedData,\n                columns: enhancedColumns,\n                layout: \"fitDataTable\",\n                height: \"600px\",\n                pagination: \"local\",\n                paginationSize: 20,\n                paginationSizeSelector: [10, 20, 50, 100],\n                movableColumns: true,\n                resizableRows: false,\n                selectable: false, // No selection in subplugin\n                tooltips: true,\n                placeholder: \"No entries to display\",\n                persistence: {\n                    sort: true,\n                    filter: true,\n                    columns: true,\n                    page: true\n                },\n                persistenceID: \"ai-tools-valuemaps-table\",\n                locale: true,\n                langs: {\n                    \"default\": {\n                        \"pagination\": {\n                            \"page_size\": \"Page Size\",\n                            \"first\": \"First\",\n                            \"prev\": \"Prev\", \n                            \"next\": \"Next\",\n                            \"last\": \"Last\"\n                        },\n                        \"headerFilters\": {\n                            \"default\": \"Filter column...\"\n                        }\n                    }\n                },\n                rowFormatter: function(row) {\n                    var data = row.getData();\n                    \n                    // Style separator rows\n                    if (data.isSeparator) {\n                        row.getElement().style.backgroundColor = '#f8f9fa';\n                        row.getElement().style.fontWeight = 'bold';\n                        row.getElement().style.borderTop = '2px solid #dee2e6';\n                        \n                        // Set content for separator row\n                        var cells = row.getCells();\n                        if (cells.length > 0) {\n                            var firstCell = cells[0];\n                            firstCell.getElement().colSpan = cells.length;\n                            firstCell.getElement().innerHTML = '<i class=\"fa fa-folder-open me-2\"></i>' + data.groupTitle;\n                            \n                            // Hide other cells in separator row\n                            for (var i = 1; i < cells.length; i++) {\n                                cells[i].getElement().style.display = 'none';\n                            }\n                        }\n                        return;\n                    }\n                    \n                    // Style master entries\n                    if (data.ismaster === 1) {\n                        row.getElement().style.backgroundColor = '#eaffea';\n                        row.getElement().classList.add('ismaster');\n                    }\n                }\n            });\n\n            // Table events\n            table.on(\"tableBuilt\", function() {\n                console.log('[valuemaps_manager] Table built successfully');\n                \n                // Set default filter to show only current user's entries (like module)\n                table.setHeaderFilterValue(\"username\", currentUsername);\n                \n                // Add user filter toggle\n                self.addUserFilterToggle(table, currentUsername);\n            });\n\n            // Double click to edit (like module)\n            table.on(\"rowDblClick\", function(e, row) {\n                var data = row.getData();\n                if (!data.isSeparator) {\n                    window.open(data.edit_url, '_blank');\n                }\n            });\n\n            // Make manager globally available for button callbacks\n            window.valuemapsManager = this;\n        },\n\n        /**\n         * Add user filter toggle button (like in module)\n         */\n        addUserFilterToggle: function(table, currentUsername) {\n            var toolbar = $('.card-header .table-controls');\n            if (toolbar.length === 0) {\n                return;\n            }\n\n            toolbar.prepend('<button type=\"button\" class=\"btn btn-sm btn-outline-info ms-2\" id=\"user-filter-toggle\">' +\n                           '<i class=\"fa fa-user\"></i> My Entries</button>');\n            \n            var showingOnlyMine = true;\n            $('#user-filter-toggle').on('click', function() {\n                var $btn = $(this);\n                if (showingOnlyMine) {\n                    // Show all entries\n                    table.clearHeaderFilter(\"username\");\n                    $btn.html('<i class=\"fa fa-users\"></i> All Entries');\n                    $btn.removeClass('btn-outline-info').addClass('btn-outline-secondary');\n                    showingOnlyMine = false;\n                } else {\n                    // Filter to user entries only\n                    table.setHeaderFilterValue(\"username\", currentUsername);\n                    $btn.html('<i class=\"fa fa-user\"></i> My Entries');\n                    $btn.removeClass('btn-outline-secondary').addClass('btn-outline-info');\n                    showingOnlyMine = true;\n                }\n            });\n        },\n\n        /**\n         * Apply filters from form controls\n         */\n        applyFilters: function() {\n            if (!table) {\n                return;\n            }\n            \n            var courseFilter = $('#filter-course').val();\n            var activityFilter = $('#filter-activity').val();\n            var typeFilter = $('#filter-type').val();\n            var searchFilter = $('#search-entries').val();\n\n            // Clear existing filters\n            table.clearFilter();\n\n            // Apply filters (skip separator rows)\n            var filters = [];\n            \n            if (courseFilter) {\n                filters.push({field: \"course_name\", type: \"=\", value: courseFilter});\n            }\n            if (activityFilter) {\n                filters.push({field: \"activity_name\", type: \"=\", value: activityFilter});\n            }\n            \n            if (searchFilter) {\n                filters.push([\n                    {field: \"course_name\", type: \"like\", value: searchFilter},\n                    {field: \"activity_name\", type: \"like\", value: searchFilter}\n                ]);\n            }\n\n            // Add filter to exclude separator rows from normal filtering\n            filters.push(function(data) {\n                return !data.isSeparator;\n            });\n\n            if (filters.length > 0) {\n                table.setFilter(filters);\n            }\n        },\n\n        /**\n         * Clear all filters\n         */\n        clearFilters: function() {\n            // Clear form filters\n            $('#filter-course, #filter-activity, #filter-type').val('');\n            $('#search-entries').val('');\n            \n            // Clear table filters\n            if (table) {\n                table.clearFilter();\n                table.clearHeaderFilter();\n            }\n        },\n\n        /**\n         * Show export options menu\n         */\n        showExportOptions: function() {\n            var self = this;\n            \n            var exportMenu = $('<div class=\"dropdown-menu dropdown-menu-end show\">' +\n                '<h6 class=\"dropdown-header\">Export Options</h6>' +\n                '<button class=\"dropdown-item\" data-format=\"csv\">' +\n                '<i class=\"fa fa-file-csv me-2\"></i>Export as CSV</button>' +\n                '<button class=\"dropdown-item\" data-format=\"json\">' +\n                '<i class=\"fa fa-file-code me-2\"></i>Export as JSON</button>' +\n                '<button class=\"dropdown-item\" data-format=\"xlsx\">' +\n                '<i class=\"fa fa-file-excel me-2\"></i>Export as Excel</button>' +\n                '</div>');\n\n            // Position menu\n            var exportBtn = $('#export-data');\n            var offset = exportBtn.offset();\n            exportMenu.css({\n                'position': 'absolute',\n                'top': offset.top + exportBtn.outerHeight(),\n                'left': offset.left - 150,\n                'z-index': 1050\n            });\n\n            // Handle clicks\n            exportMenu.find('[data-format]').on('click', function() {\n                var format = $(this).data('format');\n                self.exportData(format);\n                exportMenu.remove();\n            });\n\n            // Remove on outside click\n            $(document).one('click', function() {\n                exportMenu.remove();\n            });\n\n            $('body').append(exportMenu);\n        },\n\n        /**\n         * Export table data (filter out separators)\n         */\n        exportData: function(format) {\n            if (!table) {\n                return;\n            }\n\n            var filename = 'valuemap_entries_' + new Date().toISOString().slice(0,10);\n\n            // Custom download to exclude separator rows\n            var exportData = table.getData().filter(function(row) {\n                return !row.isSeparator;\n            });\n\n            if (format === 'csv') {\n                table.download(\"csv\", filename + \".csv\", {}, \"active\");\n            } else if (format === 'json') {\n                var dataStr = JSON.stringify(exportData, null, 2);\n                var dataBlob = new Blob([dataStr], {type: 'application/json'});\n                var url = URL.createObjectURL(dataBlob);\n                var link = document.createElement('a');\n                link.href = url;\n                link.download = filename + '.json';\n                link.click();\n                URL.revokeObjectURL(url);\n            } else if (format === 'xlsx') {\n                table.download(\"xlsx\", filename + \".xlsx\", {sheetName: \"Value Map Entries\"}, \"active\");\n            }\n        },\n\n        /**\n         * Toggle fullscreen mode\n         */\n        toggleFullscreen: function() {\n            $('body').toggleClass('valuemapdoc-fullscreen');\n            \n            var $btn = $('#toggle-fullscreen');\n            if ($('body').hasClass('valuemapdoc-fullscreen')) {\n                $btn.html('<i class=\"fa fa-compress\"></i> Exit Fullscreen');\n                if (table) {\n                    table.redraw(true);\n                }\n            } else {\n                $btn.html('<i class=\"fa fa-expand\"></i> Fullscreen');\n                if (table) {\n                    table.redraw(true);\n                }\n            }\n        },\n\n        /**\n         * Show entry details modal\n         */\n        showEntryDetails: function(entryId) {\n            var entryData = allData.find(function(entry) {\n                return entry.id === entryId && !entry.isSeparator;\n            });\n\n            if (!entryData) {\n                return;\n            }\n\n            var modalHtml = '<div class=\"modal fade\" id=\"entryDetailsModal\" tabindex=\"-1\">' +\n                '<div class=\"modal-dialog modal-lg\">' +\n                '<div class=\"modal-content\">' +\n                '<div class=\"modal-header\">' +\n                '<h5 class=\"modal-title\">Entry Details</h5>' +\n                '<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"></button>' +\n                '</div>' +\n                '<div class=\"modal-body\">' +\n                '<div class=\"row mb-3\">' +\n                '<div class=\"col-md-6\"><strong>Course:</strong><br>' + entryData.course_name + '</div>' +\n                '<div class=\"col-md-6\"><strong>Activity:</strong><br>' + entryData.activity_name + '</div>' +\n                '</div>' +\n                '<div class=\"row mb-3\">' +\n                '<div class=\"col-md-6\"><strong>Author:</strong><br>' + entryData.user_fullname + '</div>' +\n                '</div>' +\n                '<div class=\"row mb-3\">' +\n                '<div class=\"col-md-6\"><strong>Created:</strong><br>' + entryData.timecreated_formatted + '</div>' +\n                '<div class=\"col-md-6\"><strong>Modified:</strong><br>' + entryData.timemodified_formatted + '</div>' +\n                '</div>' +\n                '</div>' +\n                '<div class=\"modal-footer\">' +\n                '<a href=\"' + entryData.edit_url + '\" class=\"btn btn-primary\" target=\"_blank\">' +\n                '<i class=\"fa fa-edit\"></i> Edit in Activity</a>' +\n                '<button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>' +\n                '</div>' +\n                '</div>' +\n                '</div>' +\n                '</div>';\n\n            // Remove existing modal\n            $('#entryDetailsModal').remove();\n            \n            // Add and show new modal\n            $('body').append(modalHtml);\n            var modal = new bootstrap.Modal(document.getElementById('entryDetailsModal'));\n            modal.show();\n        },\n\n        /**\n         * Format type name for display\n         */\n        formatTypeName: function(type) {\n            var names = {\n                'customer_profile': 'Customer Profile',\n                'value_proposition': 'Value Proposition',\n                'pain_analysis': 'Pain Analysis', \n                'value_map': 'Value Map',\n                'general': 'General',\n                'unknown': 'Unknown'\n            };\n            return names[type] || type;\n        },\n\n        /**\n         * Show different states\n         */\n        showLoadingState: function() {\n            $('#loading-overlay').show();\n            $('#valuemaps-table').hide();\n            $('#empty-state').hide();\n            $('#error-state').hide();\n        },\n\n        showTableState: function() {\n            $('#loading-overlay').hide();\n            $('#valuemaps-table').show();\n            $('#empty-state').hide();\n            $('#error-state').hide();\n        },\n\n        showEmptyState: function() {\n            $('#loading-overlay').hide();\n            $('#valuemaps-table').hide();\n            $('#empty-state').show();\n            $('#error-state').hide();\n        },\n\n        showErrorState: function(message) {\n            $('#loading-overlay').hide();\n            $('#valuemaps-table').hide();\n            $('#empty-state').hide();\n            $('#error-state').show();\n            $('#error-message').text(message);\n        }\n    };\n});"],"names":["define","$","Ajax","Notification","table","config","window","valuemapsConfig","allData","M","cfg","fullname","username","init","console","log","columnsElement","document","querySelector","textContent","columns","JSON","parse","e","error","Array","isArray","waitForTabulator","warn","self","this","Tabulator","bindEvents","loadData","setTimeout","on","showExportOptions","clearFilters","applyFilters","toggleFullscreen","showLoadingState","call","methodname","args","userid","done","data","entries","updateStatistics","statistics","populateFilterOptions","processedData","processDataWithSeparators","length","initializeTable","showTableState","showEmptyState","fail","showErrorState","message","exception","currentGroup","forEach","entry","groupKey","course_name","activity_name","push","id","isSeparator","groupTitle","stats","text","total_entries","unique_courses","unique_activities","courseSelect","find","remove","courses_list","course","append","activitySelect","activities_list","activity","getUsernameFromResponse","response","currentUserId","userEntry","prepareColumns","enhancedColumns","col","title","field","hozAlign","headerSort","width","headerFilter","editable","formatter","cell","getRow","getData","value","getValue","row","ismaster","view_url","edit_url","currentUsername","layout","height","pagination","paginationSize","paginationSizeSelector","movableColumns","resizableRows","selectable","tooltips","placeholder","persistence","sort","filter","page","persistenceID","locale","langs","rowFormatter","getElement","style","backgroundColor","fontWeight","borderTop","cells","getCells","firstCell","colSpan","innerHTML","i","display","classList","add","setHeaderFilterValue","addUserFilterToggle","open","valuemapsManager","toolbar","prepend","showingOnlyMine","$btn","clearHeaderFilter","html","removeClass","addClass","courseFilter","val","activityFilter","searchFilter","clearFilter","filters","type","setFilter","exportMenu","exportBtn","offset","css","top","outerHeight","left","format","exportData","one","filename","Date","toISOString","slice","download","dataStr","stringify","dataBlob","Blob","url","URL","createObjectURL","link","createElement","href","click","revokeObjectURL","sheetName","toggleClass","hasClass","redraw","showEntryDetails","entryId","entryData","modalHtml","user_fullname","timecreated_formatted","timemodified_formatted","bootstrap","Modal","getElementById","show","formatTypeName","hide"],"mappings":"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"}