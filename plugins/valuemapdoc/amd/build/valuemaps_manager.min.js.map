{"version":3,"file":"valuemaps_manager.min.js","sources":["../src/valuemaps_manager.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * ValueMaps Manager JavaScript Module\n * Optimized for cross-course/activity value map entries display\n * Handles 1-10 activities with 5-50 entries each (~500 max entries)\n *\n * @copyright  2024 Local AI Tools\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/ajax', 'core/notification'], function($, Ajax, Notification) {\n    'use strict';\n\n    var table = null;\n    var config = window.valuemapsConfig || {};\n    var allData = [];\n    var selectedRows = [];\n    var currentStatistics = {};\n\n\n    return {\n        /**\n         * Initialize the module\n         */\n        init: function() {\n            // Get columns configuration from DOM\n            var columnsElement = document.querySelector('#valuemap-columns');\n            if (columnsElement && columnsElement.textContent) {\n                var columns;\n                try {\n                    columns = JSON.parse(columnsElement.textContent);\n                } catch (e) {\n                    this.showErrorState('Invalid column configuration');\n                    return;\n                }\n\n                if (Array.isArray(columns)) {\n                    this.waitForTabulator(columns);\n                } else {\n                    this.showErrorState('Column configuration is not valid');\n                }\n            } else {\n                this.showErrorState('Column configuration not found');\n            }\n        },\n\n        /**\n         * Wait for Tabulator to be available and then initialize\n         * @param {Array} columns Column configuration from DOM\n         */\n        waitForTabulator: function(columns) {\n            var self = this;\n            if (typeof window.Tabulator !== 'undefined') {\n                this.bindEvents();\n                this.loadData(columns);\n            } else {\n                setTimeout(function() {\n                    self.waitForTabulator(columns);\n                }, 100);\n            }\n        },\n\n    /**\n    * Bind event handlers\n    */\n    bindEvents: function() {\n            var self = this;\n\n        // Refresh data\n        $('#refresh-data').on('click', function() {\n            self.init();\n        });\n\n        // Export data\n        $('#export-data').on('click', function() {\n            self.showExportOptions();\n        });\n\n        // Clear filters\n        $('#clear-filters').on('click', function() {\n            self.clearFilters();\n        });\n\n        // ZMIANA: Wszystkie filtry używają tej samej funkcji\n        $('#filter-course, #filter-activity').on('change', function() {\n            self.applyAllFilters(); // Zamiast applyOtherFilters()\n        });\n\n        // ZMIANA: Wyszukiwanie też używa tej samej funkcji\n        $('#search-entries').on('input', function() {\n            self.applyAllFilters(); // Zamiast custom logic\n        });\n\n        // Retry loading\n        $('#retry-loading').on('click', function() {\n            self.init();\n        });\n\n        // Fullscreen toggle\n        $('#toggle-fullscreen').on('click', function() {\n            self.toggleFullscreen();\n        });\n            \n    },\n\n    /**\n     * NOWA FUNKCJA: Zastosuj wszystkie filtry jednocześnie\n     * Uwzględnia: course, activity, wyszukiwanie globalne\n    */\n    applyAllFilters: function() {\n        if (!table) {\n            console.warn('Table not initialized yet');\n            return;\n        }\n\n        // Pobierz wartości wszystkich filtrów\n        var courseFilter = $(\"#filter-course\").val();\n        var activityFilter = $(\"#filter-activity\").val();\n        var searchFilter = $(\"#search-entries\").val().toLowerCase().trim();\n    \n        // Jeśli nie ma żadnych filtrów, wyczyść i pokaż wszystko\n        if (!courseFilter && !activityFilter && !searchFilter) {\n            table.clearFilter();\n            return;\n        }\n    \n        // Pobierz kolumny dla wyszukiwania globalnego\n        var columns = table.getColumnDefinitions();\n    \n        // Zastosuj jeden custom filter który sprawdza wszystkie warunki\n        table.setFilter(function(data) {\n            // 1. Sprawdź filtr course\n            if (courseFilter && data.course_name !== courseFilter) {\n                return false;\n            }\n        \n            // 2. Sprawdź filtr activity\n            if (activityFilter && data.activity_name !== activityFilter) {\n                return false;\n            }\n        \n            // 3. Sprawdź wyszukiwanie globalne (jeśli jest wypełnione)\n            if (searchFilter) {\n                var matchesSearch = columns.some(function(col) {\n                var fieldValue = data[col.field];\n                return fieldValue && \n                       fieldValue.toString().toLowerCase().includes(searchFilter);\n            });\n            \n            if (!matchesSearch) {\n                return false;\n            }\n        }\n        \n        // Jeśli przeszedł wszystkie testy, pokaż rekord\n        return true;\n    });\n},\n\n\n\n\n        /**\n         * Load data from server - use static columns from DOM\n         * @param {Array} columns Column configuration from DOM\n         */\n        loadData: function(columns) {\n            var self = this;\n            this.showLoadingState();\n\n            Ajax.call([{\n                methodname: 'aitoolsub_valuemapdoc_get_all_entries_global',\n                args: {\n                    userid: config.userid || 0,\n                    page: 0,\n                    limit: 0\n                }\n            }])[0].done(function(data) {\n                // Store raw data\n                allData = data.entries || [];\n                currentStatistics = data.statistics || {};\n\n                // Update UI with statistics\n                self.updateStatistics(currentStatistics);\n                self.populateFilterOptions(currentStatistics);\n\n                // Use columns from DOM (static configuration)\n//                console.log('Using static columns from DOM:', columns);\n//                console.log('Static columns count:', columns.length);\n\n                if (allData.length > 0) {\n                    var groupedData = self.processDataWithNativeGrouping(allData);\n                    self.initializeTableWithGrouping(columns, groupedData);\n                    self.showTableState();\n                } else {\n                    self.showEmptyState();\n                }\n\n            }).fail(function(error) {\n                self.showErrorState(error.message || 'Failed to load entries');\n                Notification.exception(error);\n            });\n        },\n\n        /**\n         * OPTION 2: Process data for native Tabulator grouping\n         * @param {Array} entries Array of entries from server  \n         * @return {Array} Processed data for grouping\n         */\n        processDataWithNativeGrouping: function(entries) {\n            if (entries.length === 0) {\n                return [];\n            }\n\n            // Add grouping field and proper URLs to each entry\n            entries.forEach(function(entry) {\n                entry.course_activity_group = entry.course_name + ' → ' + entry.activity_name;\n                \n                // Fix undefined URLs - build proper activity URLs\n                entry.view_activity_url = M.cfg.wwwroot + '/mod/valuemapdoc/view.php?id=' + entry.cmid;\n                entry.edit_url = M.cfg.wwwroot + '/mod/valuemapdoc/edit.php?id=' + entry.cmid + '&entryid=' + entry.id;\n            });\n\n            return entries;\n        },\n\n        /**\n         * Update statistics display with cross-course data\n         * @param {Object} stats Statistics object from server\n         */\n        updateStatistics: function(stats) {\n            $('#stat-total-entries').text(stats.total_entries || 0);\n            $('#stat-unique-courses').text(stats.unique_courses || 0);\n            $('#stat-unique-activities').text(stats.unique_activities || 0);\n\n            // Update dashboard summary if present\n            if ($('.dashboard-summary').length > 0) {\n                $('.dashboard-summary .entries-count').text(stats.total_entries || 0);\n                $('.dashboard-summary .courses-count').text(stats.unique_courses || 0);\n                $('.dashboard-summary .activities-count').text(stats.unique_activities || 0);\n            }\n        },\n\n        /**\n         * Populate filter dropdown options from statistics\n         * @param {Object} stats Statistics containing lists\n         */\n        populateFilterOptions: function(stats) {\n            // Populate course filter\n            var courseSelect = $('#filter-course');\n            courseSelect.find('option:not(:first)').remove();\n            if (stats.courses_list && stats.courses_list.length > 0) {\n                stats.courses_list.forEach(function(course) {\n                    courseSelect.append('<option value=\"' + course + '\">' + course + '</option>');\n                });\n            }\n\n            // Populate activity filter\n            var activitySelect = $('#filter-activity');\n            activitySelect.find('option:not(:first)').remove();\n            if (stats.activities_list && stats.activities_list.length > 0) {\n                stats.activities_list.forEach(function(activity) {\n                    activitySelect.append('<option value=\"' + activity + '\">' + activity + '</option>');\n                });\n            }\n        },\n\n        /**\n         * OPTION 1: Prepare columns for custom separators (CSS positioning)\n         * @param {Array} userColumns User's field columns (7/13/20)\n         * @return {Array} Enhanced columns for Tabulator\n         */\n        prepareColumns: function(userColumns) {\n            var self = this;\n            var enhancedColumns = [];\n\n            // 1. Checkbox column - ONLY CHECKBOX, no HTML\n            enhancedColumns.push({\n                title: '',\n                field: 'checkbox',\n                width: 40,\n                hozAlign: \"center\",\n                headerSort: false,\n                formatter: function(cell) {\n                    var data = cell.getRow().getData();\n                    if (data.isSeparator) {\n                        return '';\n                    }\n                    return '<input type=\"checkbox\" class=\"entry-checkbox\" data-entry-id=\"' + data.id + '\">';\n                },\n                cellClick: function(e, cell) {\n                    e.stopPropagation();\n                    var data = cell.getRow().getData();\n                    if (!data.isSeparator) {\n                        self.toggleRowSelection(data.id);\n                    }\n                }\n            });\n\n            // 2. User's field columns - PLAIN TEXT ONLY\n            userColumns.forEach(function(col) {\n                enhancedColumns.push({\n                    title: col.title,\n                    field: col.field,\n                    hozAlign: 'left',\n                    headerSort: true,\n                    width: col.width || 150,\n                    headerFilter: \"input\",\n                    headerFilterPlaceholder: \"Filter \" + col.title + \"...\",\n                    editable: false,\n                    formatter: function(cell) {\n                        var data = cell.getRow().getData();\n                        if (data.isSeparator) {\n                            return '';\n                        }\n                        // PLAIN TEXT - no HTML formatting\n                        return data[col.field] || '';\n                    }\n                });\n            });\n\n            return enhancedColumns;\n        },\n\n        /**\n         * OPTION 2: Prepare columns for native grouping\n         * @param {Array} userColumns User's field columns (7/13/20)\n         * @return {Array} Enhanced columns for Tabulator\n         */\n        prepareColumnsForGrouping: function(userColumns) {\n            var self = this;\n            var enhancedColumns = [];\n\n            // 1. Checkbox column\n            enhancedColumns.push({\n                title: '',\n                field: 'checkbox',\n                width: 40,\n                hozAlign: \"center\",\n                headerSort: false,\n                formatter: function(cell) {\n                    return '<input type=\"checkbox\" class=\"entry-checkbox\" data-entry-id=\"' + cell.getRow().getData().id + '\">';\n                },\n                cellClick: function(e, cell) {\n                    e.stopPropagation();\n                    self.toggleRowSelection(cell.getRow().getData().id);\n                }\n            });\n\n            // 2. User's field columns\n            userColumns.forEach(function(col) {\n                enhancedColumns.push({\n                    title: col.title,\n                    field: col.field,\n                    hozAlign: 'left',\n                    headerSort: true,\n                    width: col.width || 150,\n                    headerFilter: \"input\",\n                    headerFilterPlaceholder: \"Filter \" + col.title + \"...\",\n                    editable: false,\n                    formatter: function(cell) {\n                        return cell.getRow().getData()[col.field] || '';\n                    }\n                });\n            });\n\n            return enhancedColumns;\n        },\n\n\n        /**\n         * OPTION 2: Initialize table with native Tabulator grouping\n         * @param {Array} userColumns User's field columns\n         * @param {Array} data Table data\n         */\n        initializeTableWithGrouping: function(userColumns, data) {\n            //var self = this;\n\n            if (table) {\n                table.destroy();\n            }\n\n            var enhancedColumns = this.prepareColumnsForGrouping(userColumns);\n            \n            // DEBUG: Sprawdź kolumny przed utworzeniem tabeli\n//            console.log('Enhanced columns before Tabulator:', enhancedColumns);\n//            console.log('Enhanced columns count:', enhancedColumns.length);\n//            console.log('First few columns:', enhancedColumns.slice(0, 5));\n\n            // eslint-disable-next-line no-undef\n            table = new Tabulator(\"#valuemaps-table\", {\n                data: data,\n                columns: enhancedColumns,\n                height: \"100%\",\n                layout: \"fitColumns\",\n                //responsiveLayout: \"hide\",\n                placeholder: \"No entries found\",\n                pagination: \"local\",\n                paginationSize: 25,\n                paginationSizeSelector: [10, 25, 50, 100],\n                movableColumns: true,\n                resizableRows: false,\n                selectable: false,\n                tooltipsHeader: true,\n                \n                // Native grouping approach\n                groupBy: \"course_activity_group\",\n                groupHeader: function(value, count, data) {\n                    // Extract course and activity info from first item\n                    var firstItem = data[0];\n                    var viewUrl = firstItem.view_activity_url || (M.cfg.wwwroot + '/mod/valuemapdoc/view.php?id=' + firstItem.cmid);\n                    \n                    return '<span style=\"font-weight: bold; color: #007bff; cursor: pointer; display: block; padding: 8px; background: #f8f9fa; border-top: 2px solid #007bff;\" ' +\n                           'onclick=\"window.open(\\'' + viewUrl + '\\', \\'_blank\\')\" ' +\n                           'title=\"Click to open activity\">' +\n                           value + ' (' + count + ' entries)</span>';\n                },\n                groupStartOpen: true,\n                groupToggleElement: \"header\"\n            });\n\n            // Row double-click to edit\n            table.on(\"rowDblClick\", function(e, row) {\n                var data = row.getData();\n                window.open(data.edit_url, '_blank');\n            });\n\n            this.initializeSelectionTracking();\n            //this.searchEvents();\n        },\n\n        /**\n         * Initialize selection tracking for bulk operations\n         */\n        initializeSelectionTracking: function() {\n            var self = this;\n            \n            // Handle checkbox changes\n            $(document).on('change', '.entry-checkbox', function() {\n                var entryId = parseInt($(this).data('entry-id'));\n                var isChecked = $(this).prop('checked');\n                \n                if (isChecked) {\n                    if (selectedRows.indexOf(entryId) === -1) {\n                        selectedRows.push(entryId);\n                    }\n                } else {\n                    selectedRows = selectedRows.filter(function(id) {\n                        return id !== entryId;\n                    });\n                }\n                \n                self.updateSelectionUI();\n            });\n        },\n\n        /**\n         * Toggle row selection\n         * @param {Number} entryId Entry ID to toggle\n         */\n        toggleRowSelection: function(entryId) {\n            var checkbox = $('.entry-checkbox[data-entry-id=\"' + entryId + '\"]');\n            var isChecked = checkbox.prop('checked');\n            \n            checkbox.prop('checked', !isChecked);\n            \n            if (!isChecked) {\n                if (selectedRows.indexOf(entryId) === -1) {\n                    selectedRows.push(entryId);\n                }\n            } else {\n                selectedRows = selectedRows.filter(function(id) {\n                    return id !== entryId;\n                });\n            }\n            \n            this.updateSelectionUI();\n        },\n\n        /**\n         * Update selection UI for bulk operations\n         */\n        updateSelectionUI: function() {\n            var count = selectedRows.length;\n            var selectionInfo = $('.selection-info');\n            \n            if (count > 0) {\n                if (selectionInfo.length === 0) {\n                    $('.table-controls').prepend(\n                        '<div class=\"selection-info alert alert-info d-flex align-items-center me-2\">' +\n                        '<span class=\"selection-count\">' + count + '</span>' +\n                        '<span class=\"ms-1 me-2\">entries selected</span>' +\n                        '<button class=\"btn btn-sm btn-primary me-1\" id=\"bulk-export\">Export Selected</button>' +\n                        '<button class=\"btn btn-sm btn-outline-secondary\" id=\"clear-selection\">Clear</button>' +\n                        '</div>'\n                    );\n                    \n                    // Bind bulk actions\n                    $('#bulk-export').on('click', function() {\n                        this.exportSelected();\n                    }.bind(this));\n                    \n                    $('#clear-selection').on('click', function() {\n                        this.clearSelection();\n                    }.bind(this));\n                } else {\n                    selectionInfo.find('.selection-count').text(count);\n                }\n            } else {\n                selectionInfo.remove();\n            }\n        },\n\n        \n\n        /**\n         * Apply filters to the table with cross-course context\n         */\n        applyFilters: function() {\n            if (!table) {\n                return;\n            }\n\n            // Clear existing filters\n            table.clearFilter();\n\n            // Get filter values\n            var courseFilter = $('#filter-course').val();\n            var activityFilter = $('#filter-activity').val();\n            \n\n            // Apply course filter\n            if (courseFilter) {\n                table.addFilter(\"course_name\", \"=\", courseFilter);\n            }\n\n            // Apply activity filter\n            if (activityFilter) {\n                table.addFilter(\"activity_name\", \"=\", activityFilter);\n            }\n\n            \n        },\n\n        /**\n         * Clear all filters\n         */\n        clearFilters: function() {\n            if (!table) {\n                return;\n            }\n\n            table.clearFilter();\n            $('#filter-course').val('');\n            $('#filter-activity').val('');\n            $('#search-entries').val('');\n        },\n\n        /**\n         * Clear selection\n         */\n        clearSelection: function() {\n            selectedRows = [];\n            $('.entry-checkbox').prop('checked', false);\n            $('.selection-info').remove();\n        },\n\n        /**\n         * Export selected entries\n         */\n        exportSelected: function() {\n            if (!table || selectedRows.length === 0) {\n                return;\n            }\n\n            // Filter table data to selected entries\n            var selectedData = table.getData().filter(function(row) {\n                return selectedRows.indexOf(row.id) !== -1;\n            });\n\n            // Create temporary table for export\n            var tempDiv = $('<div id=\"temp-export-table\" style=\"display: none;\"></div>');\n            $('body').append(tempDiv);\n\n            // eslint-disable-next-line no-undef\n            var tempTable = new Tabulator(\"#temp-export-table\", {\n                data: selectedData,\n                columns: this.prepareColumns([]), // Reuse column config\n                layout: \"fitData\"\n            });\n\n            // Export and cleanup\n            tempTable.download(\"csv\", \"selected-valuemap-entries.csv\");\n            setTimeout(function() {\n                tempTable.destroy();\n                tempDiv.remove();\n            }, 1000);\n        },\n\n        /**\n         * Show export options\n         */\n        showExportOptions: function() {\n            if (!table) {\n                return;\n            }\n\n            // Simple export all visible data\n            table.download(\"csv\", \"valuemap-entries-\" + new Date().toISOString().split('T')[0] + \".csv\");\n        },\n\n        /**\n         * Toggle fullscreen mode\n         */\n        toggleFullscreen: function() {\n            var container = $('#valuemaps-container');\n            container.toggleClass('fullscreen');\n\n            if (table) {\n                setTimeout(function() {\n                    table.redraw();\n                }, 100);\n            }\n        },\n\n        /**\n         * Show loading state\n         */\n        showLoadingState: function() {\n            $('#loading-state').show();\n            $('#table-state').hide();\n            $('#empty-state').hide();\n            $('#error-state').hide();\n        },\n\n        /**\n         * Show table state\n         */\n        showTableState: function() {\n            $('#loading-state').hide();\n            $('#table-state').show();\n            $('#empty-state').hide();\n            $('#error-state').hide();\n        },\n\n        /**\n         * Show empty state\n         */\n        showEmptyState: function() {\n            $('#loading-state').hide();\n            $('#table-state').hide();\n            $('#empty-state').show();\n            $('#error-state').hide();\n        },\n\n        /**\n         * Show error state\n         * @param {String} message Error message to display\n         */\n        showErrorState: function(message) {\n            $('#loading-state').hide();\n            $('#table-state').hide();\n            $('#empty-state').hide();\n            $('#error-state').show();\n            $('#error-message').text(message || 'An error occurred while loading data.');\n        }\n    };\n});\n"],"names":["define","$","Ajax","Notification","table","config","window","valuemapsConfig","allData","selectedRows","currentStatistics","init","columnsElement","document","querySelector","textContent","columns","JSON","parse","e","showErrorState","Array","isArray","waitForTabulator","self","this","Tabulator","bindEvents","loadData","setTimeout","on","showExportOptions","clearFilters","applyAllFilters","toggleFullscreen","courseFilter","val","activityFilter","searchFilter","toLowerCase","trim","getColumnDefinitions","setFilter","data","course_name","activity_name","some","col","fieldValue","field","toString","includes","clearFilter","console","warn","showLoadingState","call","methodname","args","userid","page","limit","done","entries","statistics","updateStatistics","populateFilterOptions","length","groupedData","processDataWithNativeGrouping","initializeTableWithGrouping","showTableState","showEmptyState","fail","error","message","exception","forEach","entry","course_activity_group","view_activity_url","M","cfg","wwwroot","cmid","edit_url","id","stats","text","total_entries","unique_courses","unique_activities","courseSelect","find","remove","courses_list","course","append","activitySelect","activities_list","activity","prepareColumns","userColumns","enhancedColumns","push","title","width","hozAlign","headerSort","formatter","cell","getRow","getData","isSeparator","cellClick","stopPropagation","toggleRowSelection","headerFilter","headerFilterPlaceholder","editable","prepareColumnsForGrouping","destroy","height","layout","placeholder","pagination","paginationSize","paginationSizeSelector","movableColumns","resizableRows","selectable","tooltipsHeader","groupBy","groupHeader","value","count","firstItem","groupStartOpen","groupToggleElement","row","open","initializeSelectionTracking","entryId","parseInt","prop","indexOf","filter","updateSelectionUI","checkbox","isChecked","selectionInfo","prepend","exportSelected","bind","clearSelection","applyFilters","addFilter","selectedData","tempDiv","tempTable","download","Date","toISOString","split","toggleClass","redraw","show","hide"],"mappings":"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"}